import React, { useEffect, useState } from "react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import * as z from "zod";
import { useParams, Link, useNavigate } from "react-router-dom";
import { Button } from "@/components/ui/button";
import PlanSelectorDetailed from "./PlanSelectorDetailed";
import PublishHeroSection from "./PublishHeroSection";
import { useToast } from "@/components/ui/use-toast";

import Header from "@/components/Header";
import AdvertisementCarousel from "@/components/AdvertisementCarousel";
import AdvertisementCarouselLateral from "@/components/AdvertisementCarouselLateral";
import MobileSidebar from "@/components/MobileSidebar";
import Footer from "@/components/Footer";
import { hondurasDepartment } from "@/data/hondurasDepartment";
import { useApiSend } from "../../api/config/customHooks"; // Provided import
import { registerVehicle } from "../../api/urls/vehicle"; // Provided import
import useLanguageStore from "@/store/useLanguageStore";
// Define VehicleDTO interface
interface VehicleDTO {
  id: number;
  brand: string;
  model: string;
  fuel: string;
  locate: string;
  img: string;
  condition: string;
  featured: boolean;
  year: number;
  price: number;
  distance: number;
  transmission: string;
}

interface RegisterVehicleRequest {
  vehicleDTO: VehicleDTO;
  images: string[];
}

// Schema with only relevant fields
const schema = z
  .object({
    brand: z.string().min(1, "Selecciona una marca"),
    model: z.string().min(1, "Selecciona un modelo"),
    fuel: z.string().min(1, "Selecciona el combustible"),
    locate: z.string().min(1, "Indica la ubicación"),
    condition: z.enum(["New", "Used"]),
    featured: z.boolean(),
    year: z.number().min(1900, "Año inválido").max(2025, "Año inválido"),
    price: z.number().min(0, "Precio requerido"),
    distance: z.number().min(0, "Kilometraje requerido"),
    transmission: z.string().min(1, "Selecciona la transmisión"),
  })
  .refine((data) => data.condition === "Used" || !data.featured, {
    message: "Featured only applies to used cars",
    path: ["featured"],
  });

const mockBrands = [
  { id: "toyota", name: "Toyota" },
  { id: "nissan", name: "Nissan" },
  { id: "honda", name: "Honda" },
];

const mockModels = {
  toyota: ["Corolla", "Camry", "RAV4"],
  nissan: ["Sentra", "Altima", "Rogue"],
  honda: ["Civic", "Accord", "CR-V"],
};

export default function PublishCarPage() {
  const { toast } = useToast();
  const navigate = useNavigate();
  const { countryCode } = useParams<{ countryCode?: string }>();
  const getCountryPath = (path: string) => {
    if (!countryCode || path === "/") return path;
    if (path.startsWith("/")) return `/${countryCode}${path}`;
    return `/${countryCode}/${path}`;
  };

  const [images, setImages] = useState<string[]>([]);

  const [isPremium, setIsPremium] = useState(false);

  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  const toggleMobileMenu = () => setIsMobileMenuOpen(!isMobileMenuOpen);

  const form = useForm<z.infer<typeof schema>>({
    resolver: zodResolver(schema),
    defaultValues: {
      brand: "",
      model: "",
      fuel: "",
      locate: "",
      condition: "New",
      featured: false,
      year: 2020,
      price: 0,
      distance: 0,
      transmission: "",
    },
  });

  /*const { mutate: registerVehicleMutation } = useApiSend(
    (data: RegisterVehicleRequest, isPending, isSuccess) =>
      registerVehicle(data),
    (response) => {
      toast({
        title: "✅ Publicación creada",
        description: "Tu auto ha sido publicado correctamente.",
      });
      navigate(getCountryPath("/dashboard"));
    },
    (error) => {
      toast({
        title: "❌ Error",
        description: "Hubo un problema al publicar tu vehículo.",
        variant: "destructive",
      });
      console.error("API error:", error);
    }
  );*/

  const onSubmit = async (values: z.infer<typeof schema>) => {
    try {
      const vehicleDTO: VehicleDTO = {
        id: 0, // Will be generated by the backend
        brand: values.brand,
        model: values.model,
        fuel: values.fuel,
        locate: values.locate,
        img: images.length > 0 ? images[0] : "",
        condition: values.condition,
        featured: values.featured,
        year: values.year,
        price: values.price,
        distance: values.distance,
        transmission: values.transmission,
      };

      const requestBody: RegisterVehicleRequest = {
        vehicleDTO,
        images,
      };

      //registerVehicleMutation(requestBody);
    } catch (error) {
      toast({
        title: "❌ Error",
        description: "Hubo un problema al publicar tu vehículo.",
        variant: "destructive",
      });
      console.error("Submit error:", error);
    }
  };
  const { getTranslation } = useLanguageStore();
  return (
    <div
      className="min-h-screen bg-[#F1F6F7]
"
    >
      <Header onMenuClick={toggleMobileMenu} currentCountryCode={countryCode} />
      <MobileSidebar isOpen={isMobileMenuOpen} onClose={toggleMobileMenu} />

      <div className="pt-[80px]">
        <main className="mx-auto px-6 py-10">
          {" "}
          <PublishHeroSection />
          <div className="mb-8">
            <AdvertisementCarousel
              slides={[
                {
                  src: "/assets/bridgestone.png",
                  ctaText: "",
                  ctaHref: "https://www.bridgestone.com/",
                  badge: "",
                },
                {
                  src: "/assets/texaco.png",
                  ctaText: "",
                  ctaHref: "https://www.toyota.com/",
                  badge: "",
                },
              ]}
            />
          </div>
          <button
            onClick={() => navigate(-1)}
            className="mb-6 px-4 py-2 bg-[#034651] text-white rounded-md hover:bg-[#045166] transition-colors duration-300 flex items-center gap-2"
          >
            <svg
              className="w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M15 19l-7-7 7-7"
              />
            </svg>
            Regresar
          </button>
          <div className="grid grid-cols-1 lg:grid-cols-4 xl:grid-cols-5 gap-8">
            <div className="lg:col-span-1 space-y-8">
              <div className="lg:col-span-1 hidden lg:block space-y-8">
                <AdvertisementCarouselLateral
                  ads={[
                    {
                      src: "/assets/meguiarSpray.jpg",
                      ctaHref: "https://www.bridgestone.co.cr/",
                    },
                    {
                      src: "/assets/meguiar.jpg",
                      ctaHref: "https://meguiarsdirect.com/",
                    },
                  ]}
                />
                <AdvertisementCarouselLateral
                  ads={[
                    {
                      src: "/assets/castrolOil.png",
                      ctaHref: "https://www.bridgestone.co.cr/",
                    },
                    {
                      src: "/assets/castrol.png",
                      ctaHref: "https://www.toyota.com/",
                    },
                  ]}
                />
              </div>
            </div>
            <div className="lg:col-span-2 xl:col-span-3">
              <PlanSelectorDetailed />
            </div>
            <div className="lg:col-span-1 hidden lg:block space-y-8">
              <AdvertisementCarouselLateral
                ads={[
                  {
                    src: "/assets/castrolOil.png",
                    ctaHref: "https://www.bridgestone.co.cr/",
                  },
                  {
                    src: "/assets/castrol.png",
                    ctaHref: "https://www.toyota.com/",
                  },
                ]}
              />
              <AdvertisementCarouselLateral
                ads={[
                  {
                    src: "/assets/meguiarSpray.jpg",
                    ctaHref: "https://www.bridgestone.co.cr/",
                  },
                  {
                    src: "/assets/meguiar.jpg",
                    ctaHref: "https://meguiarsdirect.com/",
                  },
                ]}
              />
            </div>
          </div>
          <div className="mt-8">
            <AdvertisementCarousel
              slides={[
                {
                  src: "/assets/tesla.svg",
                  ctaHref: "https://www.bridgestone.co.cr/",
                  badge: "",
                },
                {
                  src: "/assets/toyotaxl.png",
                  ctaHref: "https://www.toyota.com/",
                  badge: "",
                },
              ]}
            />
          </div>
        </main>
      </div>
      <Footer />
    </div>
  );
}
